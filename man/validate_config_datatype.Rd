% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_config.R
\name{validate_config_datatype}
\alias{validate_config_datatype}
\title{Validate that all configurations match their required data format}
\usage{
validate_config_datatype(yamlfile)
}
\arguments{
\item{yamlfile}{Named list, assumed to be a parsed yaml-format config file.}
}
\value{
Either \code{NULL} if all configuration values have the required data formats, or a
character string stating which configurations have an unexpected data format.
}
\description{
Internal helper function that checks whether the values of all configurations
in \code{yamlfile} have their required data format, and prints a character string
containing a failed validation message if this is not the case.
}
\details{
Valid configuration data formats are as follows:
\itemize{
\item \verb{(move|holding)data_fileopts.separator}: A single character.
\item \verb{(move|holding)data_fileopts.decimal}: A single character.
\item \verb{(move|holding)data_fileopts.encoding}: A character string.
\item \verb{(move|holding)data_fileopts.date_format}: A character string matching readr date format specifications. See \code{\link[readr:parse_datetime]{readr::parse_date()}} for
guidance.
\item \code{holdingdata_fileopts.country_code}: A character string consisting of two upper-case letters.
\item \code{holdingdata_fileopts.coord_EPSG_code}: A single integer.
\item \verb{(move|holding)data_cols} configurations: A character string or a single integer.
}
}
\keyword{internal}
