% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/configurations-related_functions.R
\name{save_config}
\alias{save_config}
\title{Save current configurations to a config file}
\usage{
save_config(outfile, config_type = c("movement", "holding"))
}
\arguments{
\item{outfile}{The name and path of the file to which the configurations will
be saved.}

\item{config_type}{Character vector representing the type of configurations
to save: one of \code{c("movement", "holding")} (default, resulting in a
combined config file), \code{"movement"} or \code{"holding"}.}
}
\value{
No return value, but \code{save_config()} has the effect of writing a
YAML-format config file containing (a subset of) the configurations found
in the movenet environment. If this is successful, a message is printed.
}
\description{
\code{save_config()} saves the configurations currently set in the movenet
environment to a new config file of the type indicated by \code{config_type}.
}
\details{
N.B.: The resulting config file is not automatically validated.
}
\examples{
# Set-up: Save movenet environment with current configurations
movenetenv <- movenet:::movenetenv
old_config <- movenetenv$options

# Load a config file
load_config(system.file("configurations", "ScotEID.yml", package="movenet"))

# Save the currently loaded movement configurations to a new config file in `tempdir()`
save_config(paste0(tempdir(),"\\\\saved_movement_config.yml"), "movement")

#Examine file contents
xfun::file_string(paste0(tempdir(),"\\\\saved_movement_config.yml"))

# Clean-up: Remove the saved file and reinstate previous configurations
file.remove(paste0(tempdir(),"\\\\saved_movement_config.yml"))
movenetenv$options <- old_config
rm("old_config", "movenetenv")


}
\seealso{
\code{vignette("configurations")} for an explanation of the movenet
config system.

Other configurations-related functions: 
\code{\link{change_config}()},
\code{\link{get_config}()},
\code{\link{load_config}()},
\code{\link{new_config}()},
\code{\link{validate_config}()}
}
\concept{configurations-related functions}
