% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network_creation.R
\name{movedata2networkDynamic}
\alias{movedata2networkDynamic}
\title{Create a dynamic network representation of movenet-format movement data}
\usage{
movedata2networkDynamic(
  movement_data,
  holding_data = NULL,
  incl_nonactive_holdings = FALSE
)
}
\arguments{
\item{movement_data}{A movenet-format movement data tibble.}

\item{holding_data}{A movenet-format holding data tibble (optional).}

\item{incl_nonactive_holdings}{A logical that indicates whether to include
holdings from \code{holding_data} that are not present in \code{movement_data}.
Default is \code{FALSE}. If set to \code{TRUE}, holdings that don't trade within the
period covered by \code{movement_data} are included in the network but set as
non-active throughout the observation period.}
}
\value{
A networkDynamic object consisting of a directed temporal network,
with nodes representing holdings, and edges representing connections between
holdings. Moves are represented as edge spells (times at which edges are
considered active).
Additionally, information is printed out about the assumptions made while
constructing the network; this output is passed on from \code{\link[networkDynamic:networkDynamic]{networkDynamic::networkDynamic()}}.
}
\description{
\code{movedata2networkDynamic()} converts movenet-format movement and (optional)
holding data tibbles into a networkDynamic temporal network representation.
This assumes the network is directed with no loops, no hyperedges, and no
multiplex edges.
}
\details{
For compatibility with the networkDynamic package, node identifiers
need to be consecutive integers between 1 and the number of nodes in the
network (total number of holdings if \code{incl_nonactive_holdings == TRUE}, or
number of active holdings if \code{incl_nonactive_holdings == FALSE}). If holding
identifiers do not meet this condition, new integer identifiers are assigned,
in a random order. Original holding identifiers are stored as node attribute
\code{true_id} and set as \code{\link[networkDynamic:persistent_ids]{persistent ids}}.

Any \code{movement_data} columns beyond \code{from}, \code{to} and \code{date} are set as dynamic
edge attributes in the network, and any \code{holding_data} columns beyond \code{id} are
set as unchanging node attributes.

Nodes and edges are set as active only on each movement date associated with
the node or edge. Each activity spell is considered instantaneous: the
activity occurs on the movement date, but has duration 0.
}
\examples{
movement_data <- head(example_movement_data, 20)
holding_data <- head(example_holding_data, 20)

# Create a network using only movement_data
movedata2networkDynamic(movement_data)

# Create a network using movement_data and holding_data, including only
# active holdings
movedata2networkDynamic(movement_data, holding_data,
                        incl_nonactive_holdings = FALSE)

# Create a network using movement_data and holding_data, including both
# active and non-active holdings
movedata2networkDynamic(movement_data, holding_data,
                        incl_nonactive_holdings = TRUE)

rm(movement_data, holding_data)

}
\seealso{
\itemize{
\item \code{\link[networkDynamic:networkDynamic]{networkDynamic::networkDynamic()}} for the underlying network-generating process.
\item \code{vignette("network-analysis")} for an overview of the movenet network analysis workflow.
}

Other network-related functions: 
\code{\link{create_temporal_network_analysis_report}()},
\code{\link{movedata2igraph}()},
\code{\link{parallel_summarise_temporal_node_properties}()},
\code{\link{trace_contact_chains}()}
}
\concept{network-related functions}
