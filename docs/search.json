[{"path":"/articles/configurations.html","id":"configuration-files","dir":"Articles","previous_headings":"","what":"Configuration files","title":"Configurations","text":"Configuration (config) files tell movenet read incoming data files. two types config files, slightly different requirements: movement config files, information read movement data files. Configuration groupings files prefixed movedata_. holding config files, information read holding data files. Configuration groupings files prefixed holdingdata_. Movement holding configurations can also combined single config file, containing movedata_ holdingdata_ configuration groupings. combined config files need fulfill criteria movement holding config files. differing details, movement holding config files share common structure, built around two groups configurations: file data options commonly vary datasets (fileopts) column headers/indices data fields either required want extract along analyses (cols) groupings visualised content example movement config file ScotEID.yml, discussed detail subsections . Various example config files empty templates can found movenet’s configurations folder.","code":"xfun::file_string(system.file(\"configurations\", \"ScotEID.yml\", package=\"movenet\")) #> movedata_fileopts: #>   separator: \",\"   #Separator (delimiter) character used in movement datafile #>   encoding: \"UTF-8\"    #Encoding used in movement datafile #>   decimal: \".\"  #Decimal mark used in movement datafile #>   date_format: \"%Y%m%d\" #Date format specification used in movement datafile (see ?readr::parse_date for guidance) #>  #> movedata_cols: #>   from: \"departure_cph\" #Column name or number for Identifier of origin holding #>   to: \"dest_cph\" #Column name or number for Identifier of destination holding #>   date: \"departure_date\" #Column name or number for Date of transport #>   weight: \"qty_pigs\" #Column name or number for Movement weight (e.g. nr of pigs moved)"},{"path":"/articles/configurations.html","id":"file-and-data-options","dir":"Articles","previous_headings":"Configuration files","what":"File and data options","title":"Configurations","text":"Configurations file data options grouping (movedata_fileopts holdingdata_fileopts) literally tell movenet read data file. following file data options required, config files validated loaded configurations absent: separator: separator (delimiter) character used data file encoding: encoding used data file decimal: decimal mark used data file date_format: date format specification used data file (required movement config files ) Additionally, holding config files may contain several file data options required wish extract process columns geographical coordinates: coord_EPSG_code: numeric part EPSG code Coordinate Reference System used data file country_code: two-letter country code data data file","code":""},{"path":"/articles/configurations.html","id":"column-headersindices","dir":"Articles","previous_headings":"Configuration files","what":"Column headers/indices","title":"Configurations","text":"Configurations column headers/indices grouping (movedata_cols holdingdata_cols) indicate columns extracted data files. can provided column headers (character) column indices (integer). movement config files, following column headers/indices required, movement config files validated loaded configurations absent: : header/index column containing identifiers holdings origin : header/index column containing identifiers destination holdings date: header/index column containing movement dates weight: header/index column containing movement weights/quantities holding config files, one required column header/index, movement config files validated loaded configuration absent: id: header/index column containing holding identifiers, matching /movement data Additionally, holding config files may contain several optional column headers/indices relating holding properties commonly relevant analyses: coord_x: header/index column containing longitudinal geographical coordinates (x/longitude) holdings coord_y: header/index column containing latitudinal geographical coordinates (y/latitude) holdings herd_size: header/index column containing herd sizes Furthermore, movement holding config files, additional column headers/indices can included, indicate optional columns wish extract along required columns. optional configurations can given name.","code":""},{"path":"/articles/configurations.html","id":"loading-a-configuration-file","dir":"Articles","previous_headings":"","what":"Loading a configuration file","title":"Configurations","text":"function load_config() first validates config file, loads configurations movenet environment. Use load_config(configfile), configfile consisting either path config file, name (minus extension) pre-installed config file. movenet environment can hold one set movement configurations one set holding configurations time.","code":"# Load a pre-installed config file by using just its name: load_config(\"ScotEID\") #> Successfully loaded config file: ScotEID # Alternatively, provide the path to any configurations file: load_config(system.file(\"configurations\", \"fakeScotEID_holding.yml\", package=\"movenet\")) #> Successfully loaded config file: C:/Users/cboga/AppData/Local/Temp/Rtmp2lh4G4/temp_libpath14fc34d84474/movenet/configurations/fakeScotEID_holding.yml"},{"path":"/articles/configurations.html","id":"querying-configurations","dir":"Articles","previous_headings":"","what":"Querying configurations","title":"Configurations","text":"function get_config() can used view configurations currently loaded movenet environment. view specific configurations, use get_config(...), value argument consisting character string combining following elements: \"movedata_\" \"holdingdata_\" \"fileopts\" file options, \"cols\" column headers full-stop followed configuration name, e.g. \".separator\". Multiple configurations can queried : Alternatively, get full list loaded configurations, use get_config() without arguments:","code":"# Query the values of specific configurations:  get_config(\"movedata_fileopts.separator\", \"holdingdata_cols.id\") #> $movedata_fileopts.separator #> [1] \",\" #>  #> $holdingdata_cols.id #> [1] \"cph\" # Query the values of all configurations:  get_config() #> $movedata_fileopts.separator #> [1] \",\" #>  #> $movedata_fileopts.encoding #> [1] \"UTF-8\" #>  #> $movedata_fileopts.decimal #> [1] \".\" #>  #> $movedata_fileopts.date_format #> [1] \"%Y%m%d\" #>  #> $movedata_cols.from #> [1] \"departure_cph\" #>  #> $movedata_cols.to #> [1] \"dest_cph\" #>  #> $movedata_cols.date #> [1] \"departure_date\" #>  #> $movedata_cols.weight #> [1] \"qty_pigs\" #>  #> $holdingdata_fileopts.separator #> [1] \",\" #>  #> $holdingdata_fileopts.encoding #> [1] \"UTF-8\" #>  #> $holdingdata_fileopts.decimal #> [1] \".\" #>  #> $holdingdata_fileopts.coord_EPSG_code #> [1] 27700 #>  #> $holdingdata_fileopts.country_code #> [1] \"UK\" #>  #> $holdingdata_cols.id #> [1] \"cph\" #>  #> $holdingdata_cols.coord_x #> [1] \"easting\" #>  #> $holdingdata_cols.coord_y #> [1] \"northing\" #>  #> $holdingdata_cols.type #> [1] \"holding_type\" #>  #> $holdingdata_cols.herd_size #> [1] \"herd_size\""},{"path":"/articles/configurations.html","id":"saving-configurations-to-a-config-file","dir":"Articles","previous_headings":"","what":"Saving configurations to a config file","title":"Configurations","text":"function save_config() saves currently loaded configurations new config file. requires argument outfile, file name (path) save config file . also takes argument config_type indicates configurations like save: accepted values \"movement\", \"holding\", c(\"movement\", \"holding\") (default).","code":"# Save the currently loaded movement configurations to a new config file: save_config(\"saved_movement_config.yml\", config_type = \"movement\")"},{"path":"/articles/configurations.html","id":"copying-a-config-file-template-to-your-working-directory","dir":"Articles","previous_headings":"","what":"Copying a config file template to your working directory","title":"Configurations","text":"function new_config() copies config file template working directory. takes argument config_type indicates config file template like copy: accepted values \"movement\", \"holding\", c(\"movement\", \"holding\") (default).","code":"# Copy the movement config file template to your working directory:   new_config(config_type = \"movement\")"},{"path":"/articles/configurations.html","id":"changing-configurations","dir":"Articles","previous_headings":"","what":"Changing configurations","title":"Configurations","text":"function change_config() can used change individual configurations movenet environment. Configuration names new values passed change_config(...) name = value format, configuration name consisting character string combining following elements: \"movedata_\" \"holdingdata_\" \"fileopts\" file options, \"cols\" column headers full-stop followed configuration name, e.g. \".separator\". Multiple configurations can changed :","code":"# Change the values of specific configurations:  change_config(\"movedata_fileopts.separator\" = \";\", \"holdingdata_cols.id\" = \"foo\") # Inspect the changed values in the movenet environment: get_config(\"movedata_fileopts.separator\", \"holdingdata_cols.id\") #> $movedata_fileopts.separator #> [1] \";\" #>  #> $holdingdata_cols.id #> [1] \"foo\""},{"path":"/articles/configurations.html","id":"setting-a-default-configuration-file","dir":"Articles","previous_headings":"","what":"Setting a default configuration file","title":"Configurations","text":"use movenet configuration time, may want movenet automatically load configuration file movenet package loaded. , find movenet/R directory (package’s main code located). Create file directory called zzz.R. file, type following code: ScotEID can replaced whatever configuration wish load. Now, whenever movenet package loaded, .onLoad function called, loading desired configuration. See page information .onLoad zzz.R.","code":".onLoad <- function(libname, pkgname){   load_config(\"ScotEID\") }"},{"path":"/articles/movenet.html","id":"reshaping-livestock-movement-data-to-movenet-format","dir":"Articles","previous_headings":"","what":"Reshaping livestock movement data to movenet format","title":"Getting started with movenet","text":"read movement data file, first load configurations (config) file, telling movenet read data file, load data file .","code":""},{"path":"/articles/movenet.html","id":"loading-a-movement-config-file","dir":"Articles","previous_headings":"Reshaping livestock movement data to movenet format","what":"Loading a movement config file","title":"Getting started with movenet","text":"Livestock movement data can come diversity shapes formats: different countries collect different types trade-related data, may also follow different data formatting customs , example, decimal marks dates. ensure correct reading data regardless source, movenet requires users supply config file. config file contains values range properties commonly vary datasets, well column headers data fields either required (, , date, weight) want extract along analyses. details config file requirements manage movenet configurations, see vignette(\"configurations\"). Example config files empty template can found package’s configurations folder. content example config file, ScotEID.yml: ScotEID.yml configurations can loaded movenet environment function load_config():","code":"xfun::file_string(system.file(\"configurations\", \"ScotEID.yml\", package=\"movenet\")) #> movedata_fileopts: #>   separator: \",\"   #Separator (delimiter) character used in movement datafile #>   encoding: \"UTF-8\"    #Encoding used in movement datafile #>   decimal: \".\"  #Decimal mark used in movement datafile #>   date_format: \"%Y%m%d\" #Date format specification used in movement datafile (see ?readr::parse_date for guidance) #>  #> movedata_cols: #>   from: \"departure_cph\" #Column name or number for Identifier of origin holding #>   to: \"dest_cph\" #Column name or number for Identifier of destination holding #>   date: \"departure_date\" #Column name or number for Date of transport #>   weight: \"qty_pigs\" #Column name or number for Movement weight (e.g. nr of pigs moved) load_config(system.file(\"configurations\", \"ScotEID.yml\", package=\"movenet\")) # Load ScotEID.yml #> Successfully loaded config file: C:/Users/cboga/AppData/Local/Temp/Rtmp2lh4G4/temp_libpath14fc34d84474/movenet/configurations/ScotEID.yml  get_config() # Inspect the configurations in the movenet environment #> $movedata_fileopts.separator #> [1] \",\" #>  #> $movedata_fileopts.encoding #> [1] \"UTF-8\" #>  #> $movedata_fileopts.decimal #> [1] \".\" #>  #> $movedata_fileopts.date_format #> [1] \"%Y%m%d\" #>  #> $movedata_cols.from #> [1] \"departure_cph\" #>  #> $movedata_cols.to #> [1] \"dest_cph\" #>  #> $movedata_cols.date #> [1] \"departure_date\" #>  #> $movedata_cols.weight #> [1] \"qty_pigs\""},{"path":"/articles/movenet.html","id":"loading-a-movement-data-file","dir":"Articles","previous_headings":"Reshaping livestock movement data to movenet format","what":"Loading a movement data file","title":"Getting started with movenet","text":"configurations loaded movenet environment, delimited movement data file can read processed. first 6 rows example movement data file, fake_Scottish_movement_data.csv: function reformat_data() uses loaded configurations read movement data, standardise movenet format, : extracting columns minimally required data, corresponding (originating holding identifier), (destination holding identifier), date, weight (movement quantity). resulting data tibble contains columns specific order. extracting along optional columns, indicated loaded configurations. resulting data tibble, columns located required data columns. checking date column can parsed dates (using date format indicated configurations), weight column numeric. converting dates R Date format, improve interoperability. read movement data file, use reformat_data(data, type = \"movement\"): movement data now right format (movenet-format movement data tibble) plugged pseudonymisation, network analysis, transmission modelling workflows.","code":"head(read.csv(system.file(\"extdata\", \"fake_Scottish_movement_data.csv\", package=\"movenet\"),                encoding = \"UTF-8\")) #>   movement_reference foreign_reference        lot_no   lot_date departure_date #> 1             304781        PQLIKVUQVS 828PRSXKRGZYB 18/12/2018       20190208 #> 2             229759        UJULUGCKOU 614OMRCNFSSXX 06/06/2018       20190815 #> 3              36413        IQRGKIIMJY 118NPCNNTKWCP 19/01/2018       20190915 #> 4             488616        EFDZUOPVUJ 581DFDZCBFVBC 03/04/2018       20191026 #> 5             581785        IQFOGHNDRO 826HOVNIMIQWS 14/12/2018       20191017 #> 6             564911        STJBWKKKIG 928VSNVNYJQNR 11/10/2018       20191006 #>   arrival_date qty_pigs qty_doa fci_declaration dep_assurance_no   dep_name #> 1     20190209       97       4            3685           812319 TNYXECRXTQ #> 2     20190816      167      19            3608           621990 BYPDKAUULX #> 3     20190916      115      14            1299           996219 UYRYPXNTGU #> 4     20191027      125       9            9603           636449 KOWQHTETUG #> 5     20191018      109      14            2420           272511 XEHRXZSJEA #> 6     20191007       72      11            2452           959254 OYFCXVTOYL #>     dep_address dep_postcode departure_cph dest_assurance_no  dest_name #> 1 50 TOFGLBEULW       ID YTA   95/216/1100             22510 MFBGMIUGWV #> 2 31 CDVIAMOZYC       NC RJE   69/196/5890            439583 XMQBZRFOKL #> 3 10 VBLBFDSAFH       TV XCF   52/577/5349            245690 KUBFWNVPLS #> 4 94 XGWIBIQRKK       CX QXM   39/103/5541            458474 ZGWVOAAEFM #> 5 42 MMYOSGVYIK       QV RNN   41/788/6464            378463 KULTVHDMXP #> 6 94 IYOBHBTJWI       YB HWC   69/393/9398            695389 GSKYRADWKQ #>    dest_address dest_postcode    dest_cph #> 1 22 LFYLLNWFPI        QY GRM 19/818/9098 #> 2 54 TRQSPYVRPQ        BW NWI 71/939/3228 #> 3 32 GXDFSBEDPM        UY ZFH 82/501/8178 #> 4 61 IZGFLEGGLY        AL MXZ 13/282/1763 #> 5 54 XQZKSYLASC        MC JJT 57/418/6011 #> 6 35 UWDSSQIGMS        QV GSK 39/947/2201 movement_data <-    reformat_data(system.file(\"extdata\", \"fake_Scottish_movement_data.csv\", package=\"movenet\"),                 type = \"movement\")  head(movement_data) # Inspect the resulting movement_data tibble #> # A tibble: 6 x 4 #>   departure_cph dest_cph    departure_date qty_pigs #>   <chr>         <chr>       <date>            <dbl> #> 1 95/216/1100   19/818/9098 2019-02-08           97 #> 2 69/196/5890   71/939/3228 2019-08-15          167 #> 3 52/577/5349   82/501/8178 2019-09-15          115 #> 4 39/103/5541   13/282/1763 2019-10-26          125 #> 5 41/788/6464   57/418/6011 2019-10-17          109 #> 6 69/393/9398   39/947/2201 2019-10-06           72"},{"path":"/articles/movenet.html","id":"reshaping-holding-data-to-movenet-format","dir":"Articles","previous_headings":"","what":"Reshaping holding data to movenet format","title":"Getting started with movenet","text":"want use additional holding data (e.g. coordinates holding type) analyses, process described can followed holding config data files: holding data, absolutely required data column id (holding identifier, matching movement data). wish include geographic coordinates, coord_EPSG_code country_code required file options, coord_x coord_y required data columns. addition extraction required requested optional columns, reformat_data() performs following data checks standardisations holding data: loaded configurations include headers/indices columns geographical coordinates (coord_x coord_y), columns checked contain numeric data, reformatted single simple feature (sf) geometry list-column. loaded configurations include header/index column herd_size, column checked contain numeric data. holding data now right format (movenet-format holding data tibble) plugged pseudonymisation, network analysis, transmission modelling workflows.","code":"# Load a holding config file: load_config(system.file(\"configurations\", \"fakeScotEID_holding.yml\", package=\"movenet\"))  #> Successfully loaded config file: C:/Users/cboga/AppData/Local/Temp/Rtmp2lh4G4/temp_libpath14fc34d84474/movenet/configurations/fakeScotEID_holding.yml # Read in and reformat a holding data file: holding_data <-    reformat_data(system.file(\"extdata\", \"fake_Scottish_holding_data.csv\", package=\"movenet\"),                 type = \"holding\")"},{"path":"/articles/network-analysis.html","id":"generating-a-temporal-network-representation","dir":"Articles","previous_headings":"","what":"Generating a temporal network representation","title":"Network analysis of livestock movement data","text":"Currently possible generate temporal network (networkDynamic) representation movement data optional holding data, follows:","code":"# Create a networkDynamic from our data network <- movedata2networkDynamic(fake_Scottish_movement_data,                                    holding_data = fake_Scottish_holding_data,                                    incl_nonactive_holdings = FALSE) network #> NetworkDynamic properties: #>   distinct change times: 336  #>   maximal time range: 17897 until  18258  #>  #>  Dynamic (TEA) attributes: #>   Edge TEAs:    movement_reference.active  #>      qty_pigs.active  #>  #> Includes optional net.obs.period attribute: #>  Network observation period info: #>   Number of observation spells: 1  #>   Maximal time range observed: 17897 until 18258  #>   Temporal mode: continuous  #>   Time unit: unknown  #>   Suggested time increment: NA  #>  #>  Network attributes: #>   vertices = 500  #>   directed = TRUE  #>   hyper = FALSE  #>   loops = FALSE  #>   multiple = FALSE  #>   bipartite = FALSE  #>   net.obs.period: (not shown) #>   vertex.pid = true_id  #>   total edges= 4953  #>     missing edges= 0  #>     non-missing edges= 4953  #>  #>  Vertex attribute names:  #>     active coordinates herd_size holding_type true_id vertex.names  #>  #>  Edge attribute names not shown"},{"path":"/articles/network-analysis.html","id":"basic-social-network-analysis","dir":"Articles","previous_headings":"","what":"(Basic) social network analysis","title":"Network analysis of livestock movement data","text":"","code":"# Perform some analysis - find the maximum reachability parallel_max_reachabilities(list(network), n_threads = 8) #> [1] 499"},{"path":"/articles/pseudonymise.html","id":"pseudonymising-holding-identifiers","dir":"Articles","previous_headings":"","what":"Pseudonymising holding identifiers","title":"Pseudonymising livestock movement and holding data","text":"function anonymise() pseudonymises holding identifiers movenet-format movement holding data tibbles, replacing identifiers number optional prefix (e.g. “FARM”). returns pseudonymised data tibble applied pseudonymisation key. key can saved “de-pseudonymisation” data later stage, application overlapping dataset. anonymise() also takes optional key argument, can apply existing pseudonymisation key data tibble:","code":"# Pseudonymise movement_data by changing identifiers to FARM1-N: pseudonymised <- anonymise(fake_Scottish_movement_data, prefix = \"FARM\") pseudonymised_movement_data <- pseudonymised$data pseudonymisation_key <- pseudonymised$key  head(pseudonymised_movement_data) # Inspect pseudonymised movement data #> # A tibble: 6 x 5 #>   departure_cph dest_cph departure_date qty_pigs movement_reference #>   <chr>         <chr>    <date>            <dbl>              <dbl> #> 1 FARM157       FARM194  2019-02-08           97             304781 #> 2 FARM90        FARM335  2019-08-15          167             229759 #> 3 FARM3         FARM493  2019-09-15          115              36413 #> 4 FARM440       FARM414  2019-10-26          125             488616 #> 5 FARM311       FARM477  2019-10-17          109             581785 #> 6 FARM323       FARM296  2019-10-06           72             564911 head(pseudonymisation_key) # Inspect pseudonymisation key #> 30/995/4217 27/107/2991 52/577/5349 92/837/4708 45/679/9202 15/482/8366  #>     \"FARM1\"     \"FARM2\"     \"FARM3\"     \"FARM4\"     \"FARM5\"     \"FARM6\" # Use the same key from above to substitute holding identifiers in holding_data: pseudonymised_holding <- anonymise(fake_Scottish_holding_data, key = pseudonymisation_key)  pseudonymised_holding_data <- pseudonymised_holding$data # Update saved key, in case additional identifiers were added from the holding datafile: pseudonymisation_key <- pseudonymised_holding$key   head(pseudonymised_holding_data) # Inspect pseudonymised holding data #> # A tibble: 6 x 4 #>   cph     holding_type herd_size     coordinates #>   <chr>   <chr>            <dbl>     <POINT [m]> #> 1 FARM127 GXFSR             2111 (786302 325758) #> 2 FARM383 SCHZQ             2134 (196439 224516) #> 3 FARM232 HEJDE             2140 (929087 258940) #> 4 FARM493 IQALL             2141 (341259 852472) #> 5 FARM211 YUFUC             2148  (937584 95297) #> 6 FARM101 IATKP             2151 (496345 996254)"},{"path":"/articles/pseudonymise.html","id":"modifying-dates-weights-and-optional-numeric-data-columns","dir":"Articles","previous_headings":"","what":"Modifying dates, weights, and optional numeric data columns","title":"Pseudonymising livestock movement and holding data","text":"movenet also functions modify movement dates weights applying small amount noise (jittering) rounding: jitter_dates(data, range) adds random noise range days movement dates. jitter_weights(data, range, column) adds random noise range numeric column movement data, default “weight” column. round_dates(data, unit, week_start, sum_weight, ...) rounds movement dates first day specified time unit. rounding weeks, set starting day week week_start. default, weights aggregated movements holdings indicated time unit (sum_weight = TRUE); keep movements separate, set sum_weight = FALSE. Alternative additional summary functions can applied ..., using tidy evaluation rules. round_weights(data, unit, column) rounds data numeric column, default “weight” column, multiples unit.","code":"# Add jitter of up to ±5 days to movement dates:: movedata_datesj5 <- jitter_dates(fake_Scottish_movement_data, range = 5)  head(fake_Scottish_movement_data) # Inspect original #> # A tibble: 6 x 5 #>   departure_cph dest_cph    departure_date qty_pigs movement_reference #>   <chr>         <chr>       <date>            <dbl>              <dbl> #> 1 95/216/1100   19/818/9098 2019-02-08           97             304781 #> 2 69/196/5890   71/939/3228 2019-08-15          167             229759 #> 3 52/577/5349   82/501/8178 2019-09-15          115              36413 #> 4 39/103/5541   13/282/1763 2019-10-26          125             488616 #> 5 41/788/6464   57/418/6011 2019-10-17          109             581785 #> 6 69/393/9398   39/947/2201 2019-10-06           72             564911 head(movedata_datesj5) # Inspect jittered dates #> # A tibble: 6 x 5 #>   departure_cph dest_cph    departure_date qty_pigs movement_reference #>   <chr>         <chr>       <date>            <dbl>              <dbl> #> 1 95/216/1100   19/818/9098 2019-02-10           97             304781 #> 2 69/196/5890   71/939/3228 2019-08-16          167             229759 #> 3 52/577/5349   82/501/8178 2019-09-11          115              36413 #> 4 39/103/5541   13/282/1763 2019-10-21          125             488616 #> 5 41/788/6464   57/418/6011 2019-10-15          109             581785 #> 6 69/393/9398   39/947/2201 2019-10-10           72             564911  # Add jitter of up to ±10 to movement weights:: movedata_weightsj10 <- jitter_weights(fake_Scottish_movement_data, range = 10) head(movedata_weightsj10) # Inspect jittered weights #> # A tibble: 6 x 5 #>   departure_cph dest_cph    departure_date qty_pigs movement_reference #>   <chr>         <chr>       <date>            <dbl>              <dbl> #> 1 95/216/1100   19/818/9098 2019-02-08         95.4             304781 #> 2 69/196/5890   71/939/3228 2019-08-15        166.              229759 #> 3 52/577/5349   82/501/8178 2019-09-15        116.               36413 #> 4 39/103/5541   13/282/1763 2019-10-26        130.              488616 #> 5 41/788/6464   57/418/6011 2019-10-17        111.              581785 #> 6 69/393/9398   39/947/2201 2019-10-06         67.4             564911  # Round movement dates down to the first day of the month, but do not aggregate: movedata_months <- round_dates(fake_Scottish_movement_data, unit = \"month\", sum_weight = FALSE)  head(movedata_months) # Inspect rounded dates #> # A tibble: 6 x 5 #>   departure_cph dest_cph    departure_date qty_pigs movement_reference #>   <chr>         <chr>       <date>            <dbl>              <dbl> #> 1 95/216/1100   19/818/9098 2019-02-01           97             304781 #> 2 69/196/5890   71/939/3228 2019-08-01          167             229759 #> 3 52/577/5349   82/501/8178 2019-09-01          115              36413 #> 4 39/103/5541   13/282/1763 2019-10-01          125             488616 #> 5 41/788/6464   57/418/6011 2019-10-01          109             581785 #> 6 69/393/9398   39/947/2201 2019-10-01           72             564911  # Round movement dates down to the first day of the month, aggregate weights, and list reference numbers: movedata_months_aggr <- round_dates(fake_Scottish_movement_data, unit = \"month\", sum_weight = TRUE,                                     movement_reference = list(movement_reference)) # Inspect aggregated record for holdings which have 2 movements in the same month: movedata_months_aggr[which(sapply(movedata_months_aggr$movement_reference, length) == 2),]  #> # A tibble: 1 x 5 #>   departure_cph dest_cph    departure_date qty_pigs movement_reference #>   <chr>         <chr>       <date>            <dbl> <list>             #> 1 57/427/5455   21/771/7140 2019-09-01          156 <dbl [2]>  # Round movement reference numbers to the nearest multiple of 10: movedata_ref10 <- round_weights(fake_Scottish_movement_data, unit = 10, column = \"movement_reference\") head(movedata_ref10) # Inspect rounded movement reference numbers #> # A tibble: 6 x 5 #>   departure_cph dest_cph    departure_date qty_pigs movement_reference #>   <chr>         <chr>       <date>            <dbl>              <dbl> #> 1 95/216/1100   19/818/9098 2019-02-08           97             304780 #> 2 69/196/5890   71/939/3228 2019-08-15          167             229760 #> 3 52/577/5349   82/501/8178 2019-09-15          115              36410 #> 4 39/103/5541   13/282/1763 2019-10-26          125             488620 #> 5 41/788/6464   57/418/6011 2019-10-17          109             581780 #> 6 69/393/9398   39/947/2201 2019-10-06           72             564910"},{"path":"/articles/pseudonymise.html","id":"modifying-holding-coordinates","dir":"Articles","previous_headings":"","what":"Modifying holding coordinates","title":"Pseudonymising livestock movement and holding data","text":"function resample holding coordinates density-dependent manner development added shortly.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carlijn Bogaardt. Author, maintainer. Matt Denwood. Author. Stefan Widgren. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bogaardt C, Denwood M, Widgren S (2023). movenet: Toolkit Facilitating Use Livestock Movement Data Veterinary Public Health. R package version 0.1.0-1.","code":"@Manual{,   title = {movenet: A Toolkit Facilitating the Use of Livestock Movement Data in Veterinary Public Health},   author = {Carlijn Bogaardt and Matt Denwood and Stefan Widgren},   year = {2023},   note = {R package version 0.1.0-1}, }"},{"path":"/index.html","id":"movenet","dir":"","previous_headings":"","what":"A Toolkit Facilitating the Use of Livestock Movement Data in Veterinary Public Health","title":"A Toolkit Facilitating the Use of Livestock Movement Data in Veterinary Public Health","text":"goal movenet simplify effective use livestock movement data veterinary public health. facilitates dataflow livestock movement data social network analysis disease transmission models, addressing common data issues diversity data formats privacy preservation. Flow chart showing workflows movenet package, well movenet addresses common data challenges. movenet developed context NordForsk Digitalisation livestock data improve veterinary public health (DigiVet) project. Disclaimer: movenet active development. way functions called, internal methods, may still change without prior warning.","code":""},{"path":"/index.html","id":"workflows","dir":"","previous_headings":"","what":"Workflows","title":"A Toolkit Facilitating the Use of Livestock Movement Data in Veterinary Public Health","text":"movenet includes range workflows processing analysis livestock movement data (optional) holding data: standardisation data single format, allowing interoperability integration data different countries systems pseudonymisation livestock movement /holding data, improve potential data sharing collaborative analysis generation network representations, social network analysis, livestock movement data integration livestock movement /holding data transmission models exploration effects different pseudonymisation strategies network properties, allow users find suitable balance identifiability data accuracy properties. detail workflows, including sample code, see vignettes.","code":""},{"path":"/index.html","id":"shiny-app","dir":"","previous_headings":"","what":"Shiny app","title":"A Toolkit Facilitating the Use of Livestock Movement Data in Veterinary Public Health","text":"addition basic functions movenet package, developing accompanying Shiny app cater users prefer graphical user interface. information movenet app, see GitHub repository.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Toolkit Facilitating the Use of Livestock Movement Data in Veterinary Public Health","text":"can install development version movenet GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"digivet-consortium/movenet\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A Toolkit Facilitating the Use of Livestock Movement Data in Veterinary Public Health","text":"get started movenet, first load config file tell movenet read data, read data file: movement holding data now right format (movenet-format data tibbles) plugged pseudonymisation, network analysis, transmission modelling workflows. See vignette(\"movenet\") details data reading/reformatting steps, vignettes information various workflows.","code":"library(movenet)  # Load an example movement config file: load_config(system.file(\"configurations\", \"ScotEID.yml\", package = \"movenet\")) #> Successfully loaded config file: C:/Users/cboga/OneDrive - University of Glasgow/Documents/R/win-library/4.1/movenet/configurations/ScotEID.yml # Read in and reformat an example movement data file: movement_data <-    reformat_data(system.file(\"extdata\", \"fake_Scottish_movement_data.csv\", package = \"movenet\"),                 type = \"movement\")  # Load an example holding config file: load_config(system.file(\"configurations\", \"fakeScotEID_holding.yml\", package = \"movenet\"))  #> Successfully loaded config file: C:/Users/cboga/OneDrive - University of Glasgow/Documents/R/win-library/4.1/movenet/configurations/fakeScotEID_holding.yml # Read in and reformat an example holding data file: holding_data <-    reformat_data(system.file(\"extdata\", \"fake_Scottish_holding_data.csv\", package = \"movenet\"),                 type = \"holding\")"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/reference/anonymise.html","id":null,"dir":"Reference","previous_headings":"","what":"Anonymise data by replacing holding identifiers with prefix-integer\r\ncombinations — anonymise","title":"Anonymise data by replacing holding identifiers with prefix-integer\r\ncombinations — anonymise","text":"anonymise() anonymises holding movement data frame replacing holding identifiers prefix-integer combinations. anonymised data frame anonymisation key returned. default, new anonymisation key generated; alternatively, existing key can provided.","code":""},{"path":"/reference/anonymise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anonymise data by replacing holding identifiers with prefix-integer\r\ncombinations — anonymise","text":"","code":"anonymise(data, prefix, key = NULL)"},{"path":"/reference/anonymise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anonymise data by replacing holding identifiers with prefix-integer\r\ncombinations — anonymise","text":"data holding movement data frame. prefix Character string, form basis anonymised holding identifiers. integer appended form new identifier. key named character vector used anonymisation key, NULL (default) generate new key. provided key original holding identifiers names, new (anonymised) identifiers values.","code":""},{"path":"/reference/anonymise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anonymise data by replacing holding identifiers with prefix-integer\r\ncombinations — anonymise","text":"named list two elements: data containing anonymised data frame key containing applied anonymisation key. form named character vector, original holding identifiers names, new (anonymised) identifiers values.","code":""},{"path":"/reference/anonymise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Anonymise data by replacing holding identifiers with prefix-integer\r\ncombinations — anonymise","text":"Requires appropriate config file loaded, identify column(s) data contain(s) holding identifiers: origin () destination () columns movement data, id column holding data. key == NULL (default), new anonymisation key generated, holdings given new identifiers consisting prefix followed integer ranging 1 total number holdings. Integers assigned holdings random order. existing key provided, coverage holding identifiers data checked. holding identifiers data present among element names key, key used anonymisation -: holding identifiers data replaced values elements name key. Otherwise, data contains holding identifiers present key, key expanded adding additional prefix-integer combinations.","code":""},{"path":"/reference/are_ids_consec_intchars_from_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Are node ids consecutive ","title":"Are node ids consecutive ","text":"Checks whether node identifiers consecutive \"integers\" (character format), ranging 1 total number node ids. facilitate conversion movenet data tibbles formats required networkDynamic SimInf, need node identifiers consecutive integers starting 1.","code":""},{"path":"/reference/are_ids_consec_intchars_from_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are node ids consecutive ","text":"","code":"are_ids_consec_intchars_from_1(node_ids)"},{"path":"/reference/are_ids_consec_intchars_from_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are node ids consecutive ","text":"node_ids vector node IDs (character format)","code":""},{"path":"/reference/are_ids_consec_intchars_from_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are node ids consecutive ","text":"boolean - TRUE IDs need replaced, false otherwise","code":""},{"path":"/reference/asciify.html","id":null,"dir":"Reference","previous_headings":"","what":"asciify — asciify","title":"asciify — asciify","text":"asciify","code":""},{"path":"/reference/asciify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"asciify — asciify","text":"","code":"asciify(x)"},{"path":"/reference/asciify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"asciify — asciify","text":"x character","code":""},{"path":"/reference/change_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Change configurations — change_config","title":"Change configurations — change_config","text":"Change configurations","code":""},{"path":"/reference/change_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change configurations — change_config","text":"","code":"load_config(configfile)  save_config(outfile, config_type = c(\"movement\", \"holding\"))  new_config(config_type = c(\"movement\", \"holding\"))  get_config(...)  change_config(...)"},{"path":"/reference/change_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change configurations — change_config","text":"configname description","code":""},{"path":"/reference/create_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a network analysis report from data — create_report","title":"Create a network analysis report from data — create_report","text":"Create network analysis report data","code":""},{"path":"/reference/create_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a network analysis report from data — create_report","text":"","code":"create_report(data, output, output_format = \"html_document\")"},{"path":"/reference/create_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a network analysis report from data — create_report","text":"data  output output file name (path) output_format output format (\"html_document\", \"pdf_document\")","code":""},{"path":"/reference/create_vertex_spells.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: Create activity spells for nodes, to avoid\r\nvery slow reconcile.vertex.activity — create_vertex_spells","title":"Helper function: Create activity spells for nodes, to avoid\r\nvery slow reconcile.vertex.activity — create_vertex_spells","text":"Helper function: Create activity spells nodes, avoid slow reconcile.vertex.activity","code":""},{"path":"/reference/create_vertex_spells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: Create activity spells for nodes, to avoid\r\nvery slow reconcile.vertex.activity — create_vertex_spells","text":"","code":"create_vertex_spells(movement_data)"},{"path":"/reference/create_vertex_spells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: Create activity spells for nodes, to avoid\r\nvery slow reconcile.vertex.activity — create_vertex_spells","text":"movement_data movement data tibble","code":""},{"path":"/reference/create_vertex_spells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: Create activity spells for nodes, to avoid\r\nvery slow reconcile.vertex.activity — create_vertex_spells","text":"vertex spells ready passed networkDynamic()","code":""},{"path":"/reference/data2contactmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — data2contactmatrix","title":"Title — data2contactmatrix","text":"Title","code":""},{"path":"/reference/data2contactmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — data2contactmatrix","text":"","code":"data2contactmatrix(   movement_data,   holding_data = NULL,   incl_nonactive_holdings = TRUE,   accept_missing_coordinates = FALSE,   accept_missing_additional_tm_probabilities = FALSE,   weight_unit_transmission_probability = 0.5,   whole_months = TRUE,   local_spread_transmission_probabilities = NULL,   additional_transmission_prob_matrices = NULL )"},{"path":"/reference/data2contactmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — data2contactmatrix","text":"movement_data movenet-format movement data tibble holding_data movenet-format holding data tibble (optional) incl_nonactive_holdings whether include non-active holdings (default FALSE) weight_unit_transmission_probability transmission probability per unit weight moved (default 1) whole_months whether movement data covers full months (default TRUE). affects calculation daily average weights, thus movement-based transmission probabilities. See @details additional_transmission_prob_matrices named list additional transmission probability matrices include local_spread_probabilities dataframe/tibble tiered local spread probabilities. 3 columns: lower_boundary (metres), upper_boundary (metres), probability","code":""},{"path":"/reference/data2contactmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — data2contactmatrix","text":"named list two elements: transmission_matrix containing matrix overall daily transmission probabilities holding (row) holding (column), based movements, (optionally) local spread, (optionally) user-provided transmission probabilities holdings. Holdings given new identifiers form digits (format required SimInf); original identifiers can looked provided key. matrix diagonal set 0, corresponding self-infection. key containing named character vector links original holding identifiers (element names) numeric node identifiers (element values).","code":""},{"path":"/reference/extract_periodic_subnetworks.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract periodic subnetworks from movement networks — extract_periodic_subnetworks","title":"Extract periodic subnetworks from movement networks — extract_periodic_subnetworks","text":"Extract periodic subnetworks movement networks","code":""},{"path":"/reference/extract_periodic_subnetworks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract periodic subnetworks from movement networks — extract_periodic_subnetworks","text":"","code":"extract_periodic_subnetworks(networks, n_threads, periods_in_data)"},{"path":"/reference/extract_periodic_subnetworks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract periodic subnetworks from movement networks — extract_periodic_subnetworks","text":"networks named list movement networks periods_in_data list start end dates (int format) periods data","code":""},{"path":"/reference/extract_periodic_subnetworks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract periodic subnetworks from movement networks — extract_periodic_subnetworks","text":"Note network.extract: Note active vertices included default (retain..vertices=FALSE). result, size extracted network may smaller original. Vertex edge ids translated, may correspond original values. necessary maintain identities vertices, see persistent.ids. (Make argument? Add ... pass arguments?)","code":""},{"path":"/reference/extract_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract time periods covered in movement dataset — extract_periods","title":"Extract time periods covered in movement dataset — extract_periods","text":"Extract time periods covered movement dataset","code":""},{"path":"/reference/extract_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract time periods covered in movement dataset — extract_periods","text":"","code":"extract_periods(data, period)"},{"path":"/reference/extract_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract time periods covered in movement dataset — extract_periods","text":"data Date column movement data period time period extract dates (n days, week, n weeks, month, n months, year, n years)","code":""},{"path":"/reference/extract_periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract time periods covered in movement dataset — extract_periods","text":"List c(start date, end date) period covered data, dates int format","code":""},{"path":"/reference/extract_periods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract time periods covered in movement dataset — extract_periods","text":"periods days weeks, first date data used starting date; periods months years, first day month, n months, year n years used starting date. (make starting date argument?)","code":""},{"path":"/reference/generate_anonymisation_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate anonymisation key for holding identifiers — generate_anonymisation_key","title":"Generate anonymisation key for holding identifiers — generate_anonymisation_key","text":"generate_anonymisation_key() creates anonymisation key links existing holding identifiers new, non-identifiable, identifiers (randomly allocated integers prefix-integer combinations).","code":""},{"path":"/reference/generate_anonymisation_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate anonymisation key for holding identifiers — generate_anonymisation_key","text":"","code":"generate_anonymisation_key(ids, prefix = \"\", n_start)"},{"path":"/reference/generate_anonymisation_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate anonymisation key for holding identifiers — generate_anonymisation_key","text":"ids Character vector existing holding identifiers generate replacement identifiers prefix Character string, form basis replacement holding identifiers. integer appended form new identifier. n_start Number start numbering replacement identifiers","code":""},{"path":"/reference/generate_anonymisation_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate anonymisation key for holding identifiers — generate_anonymisation_key","text":"named character vector, original holding identifiers names new (non-identifiable) identifiers values. Replacement identifiers consist prefix followed integer. Integers consecutive values, starting n_start, allocated holdings random order.","code":""},{"path":"/reference/holdingids2consecints.html","id":null,"dir":"Reference","previous_headings":"","what":"Replaces node ids with consecutive ","title":"Replaces node ids with consecutive ","text":"Replaces node ids consecutive \"integers\" (character format), ranging 1 total number node ids. facilitates conversion movenet data tibbles formats required networkDynamic SimInf, need node identifiers consecutive integers starting 1. Also returns \"key\" links original ids new \"integer\" ids, original ids can added node attributes networkDynamic SimInf outputs.","code":""},{"path":"/reference/holdingids2consecints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replaces node ids with consecutive ","text":"","code":"holdingids2consecints(   movement_data,   holding_data = NULL,   incl_nonactive_holdings = FALSE )"},{"path":"/reference/holdingids2consecints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replaces node ids with consecutive ","text":"movement_data Movenet format movement data tibble holding_data Movenet format holding data tibble (optional) incl_nonactive_holdings Whether include holdings holding_data present movement_data. Default FALSE.","code":""},{"path":"/reference/holdingids2consecints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replaces node ids with consecutive ","text":"named list key, modified movement_data tibble movement_data tibble) holding_data (modified holding_data tibble present, NULL otherwise)","code":""},{"path":"/reference/jitter_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Jitter (add noise to) movement dates — jitter_dates","title":"Jitter (add noise to) movement dates — jitter_dates","text":"jitter_dates() adds random noise (jitter) movement dates movenet-format movement tibble.","code":""},{"path":"/reference/jitter_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jitter (add noise to) movement dates — jitter_dates","text":"","code":"jitter_dates(data, range)"},{"path":"/reference/jitter_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jitter (add noise to) movement dates — jitter_dates","text":"data movenet-format movement tibble. range positive integer, indicating maximum amount jitter (days) apply movement dates (see Details).","code":""},{"path":"/reference/jitter_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jitter (add noise to) movement dates — jitter_dates","text":"movement tibble like data, jittered movement dates.","code":""},{"path":"/reference/jitter_dates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jitter (add noise to) movement dates — jitter_dates","text":"Requires appropriate movement config file loaded, correctly identify date column data. Movement dates modified addition number days -range range, following discrete uniform distribution. result date moved beyond original date range, amount jitter date resampled, resulting date within original date range.","code":""},{"path":"/reference/jitter_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Jitter (add noise to) numeric movement data — jitter_weights","title":"Jitter (add noise to) numeric movement data — jitter_weights","text":"jitter_weights() adds random noise (jitter) selected numeric column movenet-format movement tibble. default, weight column selected.","code":""},{"path":"/reference/jitter_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jitter (add noise to) numeric movement data — jitter_weights","text":"","code":"jitter_weights(data, range, column = movenetenv$options$movedata_cols$weight)"},{"path":"/reference/jitter_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jitter (add noise to) numeric movement data — jitter_weights","text":"data movenet-format movement tibble. range positive number, indicating maximum amount jitter apply numeric data (see Details). column Name single numeric column jitter. default weight column (specified loaded movement configurations).","code":""},{"path":"/reference/jitter_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jitter (add noise to) numeric movement data — jitter_weights","text":"movement tibble like data, jitter applied selected numeric column.","code":""},{"path":"/reference/jitter_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jitter (add noise to) numeric movement data — jitter_weights","text":"Requires appropriate movement config file loaded, correctly identify weight column data. data selected column modified addition amount noise -range range, following uniform distribution. result data point becoming <= 0, amount jitter data point resampled, resulting data point becomes positive. capture movement livestock movement database, assumed positive weight (quantity animals moved).","code":""},{"path":[]},{"path":"/reference/movedata2networkDynamic.html","id":null,"dir":"Reference","previous_headings":"","what":"Create dynamic networks from movenet-format movement data — movedata2networkDynamic","title":"Create dynamic networks from movenet-format movement data — movedata2networkDynamic","text":"Create dynamic networks movenet-format movement data","code":""},{"path":"/reference/movedata2networkDynamic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create dynamic networks from movenet-format movement data — movedata2networkDynamic","text":"","code":"movedata2networkDynamic(   movement_data,   holding_data = NULL,   incl_nonactive_holdings = FALSE )"},{"path":"/reference/movedata2networkDynamic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create dynamic networks from movenet-format movement data — movedata2networkDynamic","text":"movement_data Movenet format movement data holding_data Movenet format holding data (optional) incl_nonactive_holdings Whether include holdings holding_data present movement_data. Default FALSE. set TRUE, holdings trade within period covered movement_data added network set non-active.","code":""},{"path":"/reference/movedata2networkDynamic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create dynamic networks from movenet-format movement data — movedata2networkDynamic","text":"Temporal network (directed) networkDynamic format","code":""},{"path":"/reference/movedata2networkDynamic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create dynamic networks from movenet-format movement data — movedata2networkDynamic","text":"returned network, node identifiers consecutive integers, may correspond original holding identifiers provided movement_data /holding_data. original holding identifiers (character format) set  networkDynamic::persistent.ids can accessed get.vertex.pid(), vertex attribute true_id. returned network, holdings set active movement spells.","code":""},{"path":"/reference/movenet-package.html","id":null,"dir":"Reference","previous_headings":"","what":"movenet: What the Package Does (One Line, Title Case) — movenet-package","title":"movenet: What the Package Does (One Line, Title Case) — movenet-package","text":"package (one paragraph).","code":""},{"path":"/reference/movenet-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"movenet: What the Package Does (One Line, Title Case) — movenet-package","text":"Maintainer: Carlijn Bogaardt Carlijn.Bogaardt@glasgow.ac.uk (ORCID) Authors: Matt Denwood md@sund.ku.dk Stefan Widgren stefan.widgren@sva.se (ORCID)","code":""},{"path":"/reference/parallel_max_reachabilities.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract max reachabilities in parallel — parallel_max_reachabilities","title":"Extract max reachabilities in parallel — parallel_max_reachabilities","text":"Extract max reachabilities parallel","code":""},{"path":"/reference/parallel_max_reachabilities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract max reachabilities in parallel — parallel_max_reachabilities","text":"","code":"parallel_max_reachabilities(networks, n_threads)"},{"path":"/reference/parallel_max_reachabilities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract max reachabilities in parallel — parallel_max_reachabilities","text":"networks list movement networks n_threads","code":""},{"path":"/reference/parallel_max_reachabilities_with_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract max reachabilities and associated node persistent identifiers, in parallel — parallel_max_reachabilities_with_id","title":"Extract max reachabilities and associated node persistent identifiers, in parallel — parallel_max_reachabilities_with_id","text":"Extract max reachabilities associated node persistent identifiers, parallel","code":""},{"path":"/reference/parallel_max_reachabilities_with_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract max reachabilities and associated node persistent identifiers, in parallel — parallel_max_reachabilities_with_id","text":"","code":"parallel_max_reachabilities_with_id(networks, n_threads)"},{"path":"/reference/parallel_max_reachabilities_with_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract max reachabilities and associated node persistent identifiers, in parallel — parallel_max_reachabilities_with_id","text":"networks list movement networks n_threads","code":""},{"path":"/reference/parallel_max_reachabilities_with_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract max reachabilities and associated node persistent identifiers, in parallel — parallel_max_reachabilities_with_id","text":"list lists: network, list (1) max reachability, (2) persistent identifiers node(s) max reachability.","code":""},{"path":"/reference/parallel_summarise_temporal_node_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract summary stats for temporal network node properties, in parallel — parallel_summarise_temporal_node_properties","title":"Extract summary stats for temporal network node properties, in parallel — parallel_summarise_temporal_node_properties","text":"Extract summary stats temporal network node properties, parallel","code":""},{"path":"/reference/parallel_summarise_temporal_node_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract summary stats for temporal network node properties, in parallel — parallel_summarise_temporal_node_properties","text":"","code":"parallel_summarise_temporal_node_properties(   networks,   n_threads,   node_property,   statistics,   identify_nodes = FALSE )"},{"path":"/reference/parallel_summarise_temporal_node_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract summary stats for temporal network node properties, in parallel — parallel_summarise_temporal_node_properties","text":"networks list movement networks n_threads number threads parallelise node_property node property: one c(\"forward reachability\", \"temporal degree\", \"temporal indegree\", \"temporal outdegree\") statistics list summary function(s) calculate, e.g. list(median, max = max). identify_nodes whether want identify nodes maximal values node_property network. Default FALSE. Requires max included named function within statistics.","code":""},{"path":"/reference/parallel_summarise_temporal_node_properties.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract summary stats for temporal network node properties, in parallel — parallel_summarise_temporal_node_properties","text":"named list lists: network, list consisting : (1) named list summary_statistics, selected node property summary statistic(s), (2 - identify_nodes set TRUE) named character vector node_pid_with_max_value, persistent identifier(s) node(s) maximal value(s) selected node property.","code":""},{"path":"/reference/plot_measure_over_anonymisation_gradient.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot values of a measure for a varying range of jitter or rounding — plot_measure_over_anonymisation_gradient","title":"Plot values of a measure for a varying range of jitter or rounding — plot_measure_over_anonymisation_gradient","text":"Plot values measure varying range jitter rounding","code":""},{"path":"/reference/plot_measure_over_anonymisation_gradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot values of a measure for a varying range of jitter or rounding — plot_measure_over_anonymisation_gradient","text":"","code":"plot_measure_over_anonymisation_gradient(data, measure_name, anonymisation)"},{"path":"/reference/plot_measure_over_anonymisation_gradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot values of a measure for a varying range of jitter or rounding — plot_measure_over_anonymisation_gradient","text":"data tibble measure values range jitter rounding measure_name measure name (refer y axis) anonymisation \"jitter\" \"round(ing)\"","code":""},{"path":"/reference/reformat_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Reading and reformatting of animal movement or holding data — reformat_data","title":"Reading and reformatting of animal movement or holding data — reformat_data","text":"Reformats movement holding data delimited file common intermediate format (extracts renames selected columns)","code":""},{"path":"/reference/reformat_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reading and reformatting of animal movement or holding data — reformat_data","text":"","code":"reformat_data(datafile, type)"},{"path":"/reference/reformat_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reading and reformatting of animal movement or holding data — reformat_data","text":"datafile Path delimited file movement holding data. type Data type: \"movement\" \"holding\"","code":""},{"path":"/reference/reformat_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reading and reformatting of animal movement or holding data — reformat_data","text":"reformatted movement holding data (selected & renamed columns)","code":""},{"path":"/reference/replace_ids_w_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace holding identifiers using a key — replace_ids_w_key","title":"Replace holding identifiers using a key — replace_ids_w_key","text":"replace_ids_w_key() replaces holding identifiers according user- provided key","code":""},{"path":"/reference/replace_ids_w_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace holding identifiers using a key — replace_ids_w_key","text":"","code":"replace_ids_w_key(data, col_to_anonymise, key)"},{"path":"/reference/replace_ids_w_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace holding identifiers using a key — replace_ids_w_key","text":"data Dataframe tibble (e.g. movement data) col_to_anonymise Headers indices columns data contain holding identifiers replaced key Named character vector, original holding identifiers names new identifiers values.","code":""},{"path":"/reference/replace_ids_w_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace holding identifiers using a key — replace_ids_w_key","text":"modified version data , within columns indicated col_to_anonymise, holding identifers replaced according key.","code":""},{"path":"/reference/round_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Round down movement dates, and/or summarise data by time unit — round_dates","title":"Round down movement dates, and/or summarise data by time unit — round_dates","text":"round_dates() rounds movement dates movenet-format movement tibble, first day specified time unit. optionally summarises movement data origin destination time unit. default, involves summation weights, alternative additional summary functions can provided ....","code":""},{"path":"/reference/round_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round down movement dates, and/or summarise data by time unit — round_dates","text":"","code":"round_dates(   data,   unit,   week_start = getOption(\"lubridate.week.start\", 7),   sum_weight = TRUE,   ... )"},{"path":"/reference/round_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round down movement dates, and/or summarise data by time unit — round_dates","text":"data movenet-format movement tibble. unit character string specifying time unit multiple unit movement dates rounded . Valid base units day, week, month, bimonth, quarter, season, halfyear year. Arbitrary unique English abbreviations lubridate::period() constructor allowed. Rounding multiples units (except weeks) supported. week_start Week start day, relevant rounding dates / aggregating data week. Default value lubridate.week.start option, 7 (Sunday) option set. Full abbreviated names days week can English provided current locale. sum_weight TRUE (default), weights summed unit, rows origin destination. name weight column remain . ... Additional alternative summary function(s), form name = value, pass dplyr::summarise(). summary functions applied data, grouped origin, destination, rounded-date. specified name column name resulting tibble. value can : vector length 1, e.g. min(x), n(), sum(.na(y)). vector length n, e.g. quantile(). tibble, add multiple columns single expression.","code":""},{"path":"/reference/round_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round down movement dates, and/or summarise data by time unit — round_dates","text":"movement tibble like data, rounded-movement dates. sum_weight TRUE summary functions provided ..., returned tibble contains data summarised origin, destination, unit, may thus decreased length compared data. Columns summary function provided, dropped resulting tibble.","code":""},{"path":"/reference/round_dates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Round down movement dates, and/or summarise data by time unit — round_dates","text":"Requires appropriate movement config file loaded, correctly identify origin (), destination (), date weight columns data. Movement dates rounded first day rounding unit specified unit. sum_weight TRUE, weights summed rows data origin, destination, rounded-date. summed weight column temporarily renamed, additional weight-dependent summary functions passed ... use original weights rather sums. summary functions provided ..., specified data summarised accordingly, rows data origin, destination, rounded-date. careful using' existing names: corresponding columns immediately updated new data can affect subsequent operations referring name. Columns summary function provided, dropped resulting tibble.","code":""},{"path":[]},{"path":"/reference/round_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Round numeric movement data — round_weights","title":"Round numeric movement data — round_weights","text":"round_weights() rounds selected numeric column movenet-format movement tibble. default, weight column selected.","code":""},{"path":"/reference/round_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round numeric movement data — round_weights","text":"","code":"round_weights(data, unit, column = movenetenv$options$movedata_cols$weight)"},{"path":"/reference/round_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round numeric movement data — round_weights","text":"data movenet-format movement tibble. unit positive number. data selected column rounded nearest multiple number. unit additionally set minimum possible value column. column Name single numeric column round. default weight column (specified loaded movement configurations).","code":""},{"path":"/reference/round_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round numeric movement data — round_weights","text":"movement tibble like data, rounding applied selected numeric column.","code":""},{"path":"/reference/round_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Round numeric movement data — round_weights","text":"Requires appropriate movement config file loaded, correctly identify weight column data. data selected column modified rounding multiples unit. Additionally, data points < unit set unit, becomes minimum possible value column. capture livestock movement, matter small, inherent risk conceptually closer unit, movement .","code":""},{"path":[]},{"path":"/reference/validate_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a movenet config file — validate_config","title":"Validate a movenet config file — validate_config","text":"Validate movenet config file","code":""},{"path":"/reference/validate_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a movenet config file — validate_config","text":"","code":"validate_config(file)"},{"path":"/reference/validate_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a movenet config file — validate_config","text":"file config file (yml format) validate","code":""},{"path":"/reference/violinplot_monthly_measures.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw violin plot of distributions of monthly values of a selected network measure, for various jittered & rounded networks — violinplot_monthly_measures","title":"Draw violin plot of distributions of monthly values of a selected network measure, for various jittered & rounded networks — violinplot_monthly_measures","text":"Draw violin plot distributions monthly values selected network measure, various jittered & rounded networks","code":""},{"path":"/reference/violinplot_monthly_measures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw violin plot of distributions of monthly values of a selected network measure, for various jittered & rounded networks — violinplot_monthly_measures","text":"","code":"violinplot_monthly_measures(monthly_data, measure_name)"},{"path":"/reference/violinplot_monthly_measures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw violin plot of distributions of monthly values of a selected network measure, for various jittered & rounded networks — violinplot_monthly_measures","text":"monthly_data tibble measure values, monthly networks measure_name measure name (refer y axis)","code":""}]
